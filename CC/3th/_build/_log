### Starting build.
# Target: sintaticoTest.ml.depends, tags: { extension:ml, file:sintaticoTest.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules sintaticoTest.ml > sintaticoTest.ml.depends # cached
# Target: Ast.ml.depends, tags: { extension:ml, file:Ast.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules Ast.ml > Ast.ml.depends # cached
# Target: Ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Ast.cmo, file:Ast.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o Ast.cmo Ast.ml # cached
# Target: erroSint.ml.depends, tags: { extension:ml, file:erroSint.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules erroSint.ml > erroSint.ml.depends
# Target: Lexico.mll, tags: { extension:mll, file:Lexico.mll, lexer, ocaml, ocamllex, package(menhirLib), quiet }
/usr/bin/ocamllex -q Lexico.mll # cached
# Target: Lexico.ml.depends, tags: { extension:ml, file:Lexico.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules Lexico.ml > Lexico.ml.depends # cached
# Target: Sintatico.mly.depends, tags: { extension:mly, file:Sintatico.mly, infer, menhir_ocamldep, ocaml, ocamldep, package(menhirLib), quiet }
menhir --table --raw-depend --ocamldep 'ocamlfind ocamldep -modules' Sintatico.mly > Sintatico.mly.depends # cached
# Target: Sintatico.mly, tags: { byte, compile, extension:ml, extension:mly, file:Sintatico.ml, file:Sintatico.mly, infer, menhir, ocaml, package(menhirLib), parser, quiet }
menhir --table --ocamlc 'ocamlfind ocamlc -package menhirLib' --infer Sintatico.mly # cached
# Target: Sintatico.mli.depends, tags: { extension:mli, file:Sintatico.mli, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules Sintatico.mli > Sintatico.mli.depends # cached
# Target: Sintatico.cmi, tags: { byte, compile, extension:mli, file:Sintatico.mli, interf, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o Sintatico.cmi Sintatico.mli # cached
# Target: Lexico.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Lexico.cmo, file:Lexico.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o Lexico.cmo Lexico.ml # cached
# Target: erroSint.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:erroSint.cmo, file:erroSint.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o erroSint.cmo erroSint.ml
# Target: sintaticoTest.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:sintaticoTest.cmo, file:sintaticoTest.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o sintaticoTest.cmo sintaticoTest.ml # cached
# Target: Sintatico.ml.depends, tags: { extension:ml, file:Sintatico.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules Sintatico.ml > Sintatico.ml.depends # cached
# Target: Sintatico.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Sintatico.cmo, file:Sintatico.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o Sintatico.cmo Sintatico.ml # cached
# Target: sintaticoTest.byte, tags: { byte, dont_link_with, extension:byte, file:sintaticoTest.byte, link, ocaml, package(menhirLib), program, quiet }
ocamlfind ocamlc -linkpkg -package menhirLib Ast.cmo Sintatico.cmo Lexico.cmo erroSint.cmo sintaticoTest.cmo -o sintaticoTest.byte
# Compilation successful.
